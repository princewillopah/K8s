# Ignore node_modules directory, as it contains dependencies
node_modules/

# Ignore log files and error reports
logs/
*.log
npm-debug.log*

# Ignore local environment configuration files ..
.env
.env.local
.env.*.local

# Ignore user-specific files
.npm
.pnpm
yarn-error.log

# Ignore the build output
dist/
build/
out/

# Ignore coverage output
coverage/

# Ignore .DS_Store files on macOS
.DS_Store

# Ignore any local configuration files
.local-*

# Ignore any terraform configuration files
.terraform/

# Exclude the .terraform directory in any subdirectory
**/.terraform/

# Exclude the .terraform directory
/.terraform/
/.terraform.lock.hcl
# Exclude Terraform state files and directories
.terraform/
*.tfstate
*.tfstate.*
terraform.tfvars
.terraform.lock.hcl
# Exclude binary files downloaded during [0m[1mTerraform initialized in an empty directory![0m

The directory has no Terraform configuration files. You may begin working
with Terraform immediately by creating Terraform configuration files.[0m
*.bin

# Ignore specific inner Terraform directories and their contents
**/terraform/
**/terraform.tfstate
**/terraform.tfstate.*
**/terraform.tfvars
**/.terraform.lock.hcl
# Ignore binary files
*.bin

# --------------------------------

# Ignore environment-specific files
*.env

# Ignore compiled Docker images
*.tar
*.gz

# Ignore editor or IDE-specific files
.vscode/
.idea/
*.swp
*~
*.sublime-workspace
*.sublime-project

# Ignore Jupyter Notebook checkpoints
.ipynb_checkpoints/

# Ignore macOS-specific files
.DS_Store

# Ignore build-related files
build/
dist/
*.egg-info/

# Ignore temporary or backup files
*.bak
*.tmp

# Ignore Kubernetes config files (optional, if not needed in version control)
*.kube/

# Ignore SSL/TLS certificates and keys 
*.key
*.pem
*.pub
*.crt

